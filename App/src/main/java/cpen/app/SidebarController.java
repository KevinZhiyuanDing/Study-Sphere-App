package cpen.app;

import cpen.network.Network;
import javafx.event.ActionEvent;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.stage.Stage;

public class SidebarController {
    public Button findRoomBtn;
    public Button findSessionBtn;
    public Button userSessionsBtn;
    public Button loginBtn;
    public Button connectBtn;

    public Label networkLabel;
    public Button newSessionBtn;

    /**
     * Initializes the SidebarController, establishing a network connection.
     */
    public void initialize() {
        connect();
    }

    /**
     * When the user clicks the "Find Room" button loads the search rooms interface
     *
     * @param actionEvent the event generated by the user clicking the button
     */
    public void onFindRoom(ActionEvent actionEvent) {
        SceneControllerUtil.loadScene("search-room.fxml", (Stage) findRoomBtn.getScene().getWindow());
    }

    /**
     * When the user clicks find session button, loads the existing session interface
     *
     * @param actionEvent the event triggered by the user clicking button
     */
    public void onFindSession(ActionEvent actionEvent) {
        SceneControllerUtil.loadScene("existing-session.fxml", (Stage) findSessionBtn.getScene().getWindow());
    }

    /**
     * When the user clicks pendingSession button, loads the user sessions interface
     *
     * @param actionEvent the event generated by the user clicking the button
     */
    public void onPendingSession(ActionEvent actionEvent) {
        SceneControllerUtil.loadScene("user-sessions.fxml", (Stage) userSessionsBtn.getScene().getWindow());
    }

    /**
     * When the user clicks login, loads the login interface
     * @param actionEvent
     */
    public void onLogin(ActionEvent actionEvent) {
        SceneControllerUtil.loadScene("login.fxml", (Stage) loginBtn.getScene().getWindow());
    }

    /**
     * When the user click newSession button, loads the new session interface
     * @param actionEvent
     */
    public void onNewSession(ActionEvent actionEvent) {
        SceneControllerUtil.loadScene("new-session.fxml", (Stage) newSessionBtn.getScene().getWindow());
    }

    /**
     * When the user initiates a connection attempt.
     *
     * @param actionEvent the event generated by the user's interaction
     */
    public void onConnect(ActionEvent actionEvent) {
        connect();
    }

    /**
     * Establishes a network connection using a network address.
     */
    private void connect() {
        boolean connectionSuccessful = DataSingleton.getInstance().setConnection(new Network("127.0.0.1"));
        if (connectionSuccessful) {
            networkLabel.setText("Connected");
        } else {
            networkLabel.setText("Server not found");
        }
    }
}
